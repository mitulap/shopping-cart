Week #3 Journal

Hemil Parmar

Link to Github : https://github.com/mitulap/shopping-cart
The repository belongs to Mitul Patel, and is being used for CMPE 281 project by the other team members including Hemil Parmar, Vishv Bhrambhatt, Pratyusha M, Mugdha Despande.

Link to Waffle : https://waffle.io/mitulap/shopping-cart


The past week has been fruitful on the work side. We have sucessfully authenticated the User API and Product API with the databases.
We have used MongoDB for storing User Database.
After an experiement, Riak the previous choice for handling Shopping cart didn`t turn out to be a 'read choice'. As my Windows machine was not helping in setting up Riak, we opted for Cassandra as the back up option.

The decision has paid off us in a huge as we have completed the Product API on the server side using Cassandra. After setting up the APIs we took up the charge for managing session on the server node.

We tried our hand with the most easy looking choice, to store the session on Server side using the Express-session. But according to the project defination, we have a mandatory task to handle the session on all server nodes and keep the nodes in consistant state. Express-session would have been ideal choice in single server case. But for managing the multi-server session that too with a load balancer, we needed a much more reliable way.

That led us to use REDIS database for storing the session. We figured out to keep the session-Id a stateless value using the JWT (JSON Web Token).
In this method, we provided the user to Login at the first time. Next time when the user logs in, we generate a unique Hashed Token for the user in the response. The token will be stored in the header for all the requests the client makes to the server. After that all the REST api calls will be authenticated on the server side, using the JWT token. The JWT tokens will be stored in Redis database on the server side, and will be replicated in the redis cluster of the other nodes too.

After completing the back-end API work, I have succesfully deployed the MongoDB and redis on a single AWS instance. 

For the next week, I aim to setup the clusture for MongoDB and Redis on all the server nodes. Also we have to create the VPC and Load-balancers to manage the network traffic. Replication between the nodes for the User and Product cart updates, are the most crucial part for the next week and for the whole project as well. We plan to wrap up the project in the following week.